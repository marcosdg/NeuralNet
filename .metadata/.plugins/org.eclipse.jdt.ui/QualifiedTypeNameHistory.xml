<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="core.propagation.PropagationFunction"/>
<fullyQualifiedTypeName name="core.Layer.kind"/>
<fullyQualifiedTypeName name="core.data.DataSet"/>
<fullyQualifiedTypeName name="core.propagation.WeightedSum"/>
<fullyQualifiedTypeName name="core.activation.Linear"/>
<fullyQualifiedTypeName name="core.learning.IterativeLearning"/>
<fullyQualifiedTypeName name="java.util.Random"/>
<fullyQualifiedTypeName name="core.data.FileParser"/>
<fullyQualifiedTypeName name="java.lang.Double"/>
<fullyQualifiedTypeName name="core.learning.error.MeanSquaredError"/>
<fullyQualifiedTypeName name="java.lang.reflect.Array"/>
<fullyQualifiedTypeName name="core.data.Benchmark"/>
<fullyQualifiedTypeName name="core.learning.error.SquaredError"/>
<fullyQualifiedTypeName name="java.util.List"/>
<fullyQualifiedTypeName name="core.data.Sample"/>
<fullyQualifiedTypeName name="core.activation.Sigmoid"/>
<fullyQualifiedTypeName name="core.learning.LearningRule"/>
<fullyQualifiedTypeName name="java.lang.System"/>
<fullyQualifiedTypeName name="core.Node"/>
<fullyQualifiedTypeName name="java.util.Collections"/>
<fullyQualifiedTypeName name="format.Message"/>
<fullyQualifiedTypeName name="core.Connection"/>
<fullyQualifiedTypeName name="java.lang.IllegalArgumentException"/>
<fullyQualifiedTypeName name="core.learning.stop.MaxEpochsStop"/>
<fullyQualifiedTypeName name="core.learning.stop.EarlyStop"/>
<fullyQualifiedTypeName name="core.learning.stop.StopCriteria"/>
<fullyQualifiedTypeName name="core.learning.SupervisedLearning"/>
<fullyQualifiedTypeName name="core.Weight"/>
<fullyQualifiedTypeName name="core.Neuron"/>
<fullyQualifiedTypeName name="core.InputNode"/>
<fullyQualifiedTypeName name="java.util.ArrayList"/>
<fullyQualifiedTypeName name="core.NeuralNetwork"/>
<fullyQualifiedTypeName name="core.Layer"/>
<fullyQualifiedTypeName name="core.learning.Backpropagation"/>
</qualifiedTypeNameHistroy>
