package factory;

import core.Connection;
import core.InputNode;
import core.NeuralNetwork;
import core.Neuron;
import core.Node;
import core.Weight;

public class NeuralNetworkFactory {

	private NeuralNetwork neuralNetwork;

	
	
// Create Connections
	
	
	// Create a generic connection (nodes must be created first).

	public void createConnection(Node from, Neuron to, double weight_value) {
		Weight weight = null;
		Connection connection = null;

		if (this.neuralNetwork.hasNode(from) && this.neuralNetwork.hasNode(to)) {

			weight = new Weight(weight_value);
			connection = new Connection(from, to, weight);

			// from Neuron ?

			if (from instanceof Neuron) {

				((Neuron) from).addOutputConnection(connection);

				// from InputNode ?

			} else if (from instanceof InputNode) {

				((InputNode) from).addOutputConnection(connection);
			}
			// always goes to Neuron.

			to.addInputConnection(connection);
		}
	}

}
