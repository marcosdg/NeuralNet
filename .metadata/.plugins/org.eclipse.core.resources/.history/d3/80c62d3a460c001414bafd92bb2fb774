package core.learning.error;

import java.util.ArrayList;
import java.util.List;

public class SquaredError {

	private List<Double> desired_output_vector, // from sample.
                          output_vector;         // from network.


	public SquaredError() {
		this.desired_output_vector = new ArrayList<Double>();
		this.output_vector = new ArrayList<Double>();
	}

	public Double getSquaredError() {

		

		for (int i = 0; i < )

	}
	
	public boolean areAdequate(List<Double> desired_output_vector,
                                 List<Double> output_vector) {
		boolean are = false;
		
		if (!this.desired_output_vector.isEmpty() &&
            !this.output_vector.isEmpty()) {

				if (this.desired_output_vector.size() == 
                    this.output_vector.size()) {
					
					are = true;
				}
			}
		return are;
	}

	public List<Double> getDesiredOutputVector() {
		return this.desired_output_vector;
	}
	public void setDesiredOutputVector(List<Double> desired_output_vector) {
		this.desired_output_vector = desired_output_vector ;
	}

	public List<Double> getOutputVector() {
		return this.output_vector;
	}
	public void setOutputVector(List<Double> output_vector) {
		this.output_vector = output_vector ;
	}

}
